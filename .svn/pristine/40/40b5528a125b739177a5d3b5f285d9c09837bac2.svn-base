import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';
import { AlertController,NavController, NavParams, ToastController, LoadingController, Slides, IonicPage } from 'ionic-angular';
import { TCommonPage } from '../basic-page';
import { TAuth } from '../services';
import { HomeService } from '../services';

@IonicPage()
@Component({
  selector: 'page-home',
  templateUrl: 'home.html'
})
export class HomePage extends TCommonPage implements OnInit, OnDestroy
{
  @ViewChild(Slides) slides: Slides;
  constructor(
    public auth: TAuth,
    public service: HomeService,
    public navCtrl: NavController,
    public navParams: NavParams,
    public loadingCtrl: LoadingController,
    public alertCtrl: AlertController,
    public toastCtrl: ToastController)
  {
    super(navCtrl, navParams, loadingCtrl, toastCtrl);
    this.InitFuncItems();
    this.RefreshUserInfo();
  }

  ngOnInit(): void
  {
    console.log('2.0.1');
  }

  ngOnDestroy(): void
  {
  }

  /**
   * 初始化 用户信息
   *====================================================================================================================
   */
  RefreshUserInfo()
  {
    this.Userdata = this.auth.UserInfo;
    this.MyPortrait = this.Userdata.headimg;
    this.point = this.Userdata.credit;
    this.signed = this.Userdata.mark == 1;
    if (this.signed)
    {
      this.SignBtnName = "已签到";
    }
    else
    {
      this.SignBtnName = "签到领积分";
    }

    this.GetDeviceList();
  }

  Sign()
  {
    //签到
    if (this.signed)
    {
      this.OpenSignPage();
    }
    else
    {
      this.auth.Sign().then(
        data => {
          console.log(data);
          this.RefreshUserInfo();
          if (data.status == 1)
          {
            this.OpenSignPage();
          }
          else
          {
            this.ShowToast(data);
          }
        },
        error => console.log(error)
      );
    }

  }

  GetDeviceList()
  {
    this.service.GetDeviceList().then(
      data => {
        if (data.status == 1)
        {
          this.deviceInfo = data.data;
        }
      },
      error => console.log(error)
    );
  }

  BindingDevice(id)
  {
    this.service.UnbindingDevice(id).then(
      data => {
        if (data.status == 1)
        {
          this.ShowToast('解除成功!');
          this.RefreshUserInfo();
        }
        else
        {
          this.ShowToast('解除失败!');
          console.log(data.msg);
        }
      },
      error => console.log(error)
    );
  }

  GetDeviceFlow(item) {
    let result = item.detail.total_flow - item.detail.used_flow;
    if ( result >= 1024 ) {
      result = result/1024;
      return result + 'G';
    }
    else {
      return result + 'M';
    }

  }

  HasbindedDevice()
  {
    return this.deviceInfo.length > 0;
  }

  OpenSignPage()
  {
    this.navCtrl.push('SigninPage', {point: this.point});
  }

  /*
  跳转充值记录页面
   */
  OpenOrderListPage() {
    this.navCtrl.push('RechargePage');
  }
  /*
  跳转充值页面
   */
  OpenChargePage(iccid) {
    this.navCtrl.push('TopupPage', {item:iccid});
  }

  /*
  跳转查询充值页面
   */
  OpenSearchPage() {
    if(3<2){
      //  this.navCtrl.push('ErrsimPage');
      //  this.navCtrl.push('ChangeupPage');
          this.navCtrl.push('LoadPage');
      //  this.navCtrl.push('CodePage');
    }
    else{
      this.navCtrl.push('SrechargePage');
    }
  }
  
 /*
  跳转SIM卡页面
   */
  OpenErrsimPage() {
    this.navCtrl.push('ErrsimPage');
  }

  /*
   跳转我的分润页面
   */
  OpenMySharePage() {
    this.navCtrl.push('MysharePage');
  }

   /*
   跳转实名认证页面
   */
  OpenCertificatePage() {
    this.navCtrl.push('CertificationPage');
  }
  
  /*
  跳转到换卡页面
   */
  OpenChangecardPage()
  {
    if (this.service.is_corp)
    {
      this.navCtrl.push('ChangecardPage');
    }
    else {
      window.open("https://open.weixin.qq.com/connect/oauth2/authorize?appid=wxc56247b94a4fee92&redirect_uri=http%3A%2f%2fsub23m.iwoyi.cn%2fweixin%2fhome&response_type=code&scope=snsapi_base&state=2#wechat_redirect", '_self', 'location=yes');
    }     
  }

  InitFuncItems()
  {
    this.FuncItems.push(
      {
        "name": '查询充值',
        "src": 'assets/icon/hot.svg',
        "tag": 0
      }
    );

    this.FuncItems.push(
      {
        "name": '充值记录',
        "src": 'assets/icon/recharge.svg',
        "tag": 5
      }
    );

   this.FuncItems.push(
      {
        "name": '实名认证',
        "src": 'assets/icon/photograph.svg',
        "tag": 4
      }
    );

    this.FuncItems.push(
      {
        "name": '换卡',
        "src": 'assets/icon/C-CAR.svg',
        "tag":8
      }
    );

    //假图标
    this.FuncItems.push(
      {
        "name": '我的分润',
        "src": '../../assets/icon/fenrun.svg',
        "tag": 1
      }
    );

    this.FuncItems.push(
      {
        "name": '进入商店',
        "src": 'assets/icon/shop.svg',
        "tag": 2
      }
    );

    this.FuncItems.push(
      {
        "name": '网络测速',
        "src": 'assets/icon/wangluo.svg',
        "tag": 3
      }
    );

    this.FuncItems.push(
      {
        "name": '录像',
        "src": 'assets/icon/consumption.svg',
        "tag": 7
      }
    );
  }
 
  

  FuncItemClick(item)
  {
    switch(item.tag)
    {
      case 0: this.OpenSearchPage(); break;
      // case 1: this.OpenMySharePage(); break;
      case 4: this.OpenCertificatePage(); break;
      case 5: this.OpenOrderListPage(); break;
      case 8: this.OpenChangecardPage(); break;
      default: this.ShowToast(item.name +'还在维护，敬请期待。', 3000, "bottom");
    }
  }

  slideChanged()
  {
    let currentIndex = this.slides.getActiveIndex();
    console.log('Current index is', currentIndex);
    this.Play();
  }

  Play()
  {
    this.played = true;
    setTimeout(() => {
      this.played = false;
    }, 1000);
  }

  inputChanged(ev: any)
  {
    console.log('input.....');
  }

  showProompt(id) {
    let prompt = this.alertCtrl.create({
      title: '解绑设备',
      message: "您确定解绑此ICCID吗？",

      buttons: [
        {
          text: '取消',
          handler: data => {
            console.log('Cancel clicked');
          }
        },
        {
          text: '确定',
          handler: data => {
            this.BindingDevice(id);
          }
        }
      ]
    });
    prompt.present();
  }

  private FuncItems = [];
  private played = false;
  private signed = false;
  private point: number;
  private MyPortrait: string;
  private SignBtnName: string = '签到领积分';
  private deviceInfo = [];
  private Userdata;
}
