  /**
   * Created by Administrator on 2017/7/13/013.
   */
  import { Component} from '@angular/core';
  import { NavController, NavParams, IonicPage } from 'ionic-angular';
  import { LoadingController, ToastController } from 'ionic-angular';
  import { TCommonPage } from '../basic-page';
  import { SrechargeService } from '../services';
  import { TAuth } from '../services';
  import { HomeService } from '../services'
  
  @IonicPage()
  @Component({
    selector: 'page-srecharge',
    templateUrl: 'srecharge.html'
  })

  export class SrechargePage extends TCommonPage 
  {
    constructor(
      public navCtrl: NavController,
      public navParams: NavParams,
      public loadingCtrl: LoadingController,
      public toastCtrl: ToastController,
      public auth: TAuth,
      public Service: SrechargeService,
      public homeService: HomeService) 
    {
      super(navCtrl, navParams, loadingCtrl, toastCtrl);

      //获取历史查询记录
      this.Service.QueryCardHistory().then(
        data => this.SetQueryCardHistory(data),
        error => console.log(error)
      );
      
      this.OnceQuery();
    }

    OnceQuery() 
    {
      let iccid = this.auth.iccid;
      if (iccid != null)
      {
        this.numCard = iccid;
        localStorage.removeItem('iccid');

        this.QueryIccid(this.numCard);
      }
    }

    QueryIccid(iccid)
    {
      this.Loading('正在查询');
      this.Service.QueryCard(iccid).then(
        data => this.SetCardInfo(data),
        error => console.log(error)
      )
    }

    SetQueryCardHistory(data) 
    {
      let item = data.data;
      for (let i = 0; i < item.length; i++) 
      {
        this.items.push({"text": item[i].iccid, "style": 'item-histroy'});
      }
    }

    SetCardInfo(data) 
    {
      this.FreeLoading();
      this.CardInfo = data.data;      

      if (this.CardInfo != null) 
      {        
        this.InitItems(this.CardInfo);
        this.Search();
      }
      else {
        this.Clear();
        this.ShowToast('您输入的卡号不存在！');
      }
      
    }

    toPay() 
    {
      if (this.numCard != null && this.CardInfo != null ) 
      {
        this.navCtrl.push('TopupPage' , {item: this.numCard});
      }
      else {
        this.ShowToast('请输入卡号！')
      }
    }

    bindingDevice() 
    {
      if ((this.numCard == null) || (this.CardInfo == null))
      {
        this.ShowToast('请输入卡号！');
        return;
      }

      this.Loading('开始绑定设备...');
      this.homeService.BindingDevice(this.numCard).then(
        data => {
          this.FreeLoading();
          this.ShowToast(data.msg);

          if (data.status == 1) 
          {
              // this.GoBack();
              this.navCtrl.push('HomePage');
          }

        },
        error => console.log(error)
      );
   
    }

    SearchIccid() 
    {
      if ((this.numCard == '') || (this.numCard == undefined))
      {
        this.ShowToast('请输入卡号！');
        this.CardInfo = null;
        this.Clear();
        return;
      }

      this.QueryIccid(this.numCard);
    }
    StatusInfo(data){
      if(data == 0){
        return '未激活'
      }
      else if(data == 1){
        return '正常使用'
      }
      else if(data == 2){
        return '停机'
      }
      else if(data == 3){
        return '沉默期到期'
      }
      else{
        return '数据错误'
      }
    }
    InitItems(data)
    {
      //todo: 请切换正常数据
      console.log(data);
    
      this.status = this.StatusInfo(data.status);
      this.CardGettype(data.package_id + "");

      if(this.datatype == ""){
        this.datatype = "无数据"
      }
      if(data.good_type == 1){
         //剩余时间（中间） 没有
          this.cardtype = 1;
      }
      else{
          this.cardtype = 0;
      }
      this.iccid = {
        "left_day": 212,
        "state": this.status,
        "used_flow": data.used_flow,
        "type":this.datatype
      };

      this.total_flow = data.total_flow;
      this.used_flow = data.used_flow;
    }

    Search()
    {
      console.log(this.numCard);
      this.found = true;
      this.setAnimate();
    }

    getItems(ev: any)
    {
      if (this.is_select_event)
      {
        this.is_select_event = false;
        return;
      }
      let text = ev;
      if (text && text.trim() != '')
      {
        this.show_items = [];
        this.show_items = this.items.filter((item) => {
          return (item.text.indexOf(text) > -1);
        });

        if (this.CanShowHistroy())
        {
          this.show_items.push({"text": '系统会自记住您最近查询的5条记录', "style": 'basic-item-histroy'});
        }
      }
    }

    CanShowHistroy()
    {
      return this.show_items.length > 0;
    }

    SelectItem(value)
    {
      this.numCard = value;
      this.show_items = [];
      this.is_select_event = true;
    }

    IncFlow()
    {
      this.flow = 0;
      console.log(this.flow)
      this.timer = setInterval(() => {
        if (this.flow < this.total_flow)
        {
          this.flow = this.flow + Math.floor(this.total_flow/30);
          if (this.flow >= this.total_flow)
          {
            this.flow = this.total_flow - this.used_flow;
          }
        }
      }, 90);

      setTimeout(() =>
      {
        clearInterval(this.timer);
        console.log("clear interval");
      }, 4000);

    }

    setAnimate()
    {
      this.animateIninitial = true;
      setTimeout(() =>
      {
        this.animateIninitial = false;
      }, 3000);

      this.IncFlow();
    }

    Clear()
    {
      this.flow = 0;
      this.found = false;
    }
    
    CardGettype(data){
     var cardInfo = [
      {id:'23',type:'1G/12个月/按月清零'},
      {id:'24',type:'3G/12个月/按月清零'},
      {id:'25',type:'6G/12个月/按月清零'},
      {id:'28',type:'12G/12个月/非按月清零'},
      {id:'29',type:'36G/12个月/非按月清零'},
      {id:'30',type:'72G/12个月/非按月清零'},
      {id:'31',type:'2G/12个月/非按月清零'},
      {id:'32',type:'1G/12个月/非按月清零'},
      {id:'33',type:'2G/2个月/非按月清零'},
      {id:'34',type:'12G/6个月/非按月清零'},
      {id:'35',type:'24G/6个月/非按月清零'},
      {id:'36',type:'36G/6个月/非按月清零'},
      {id:'38',type:'1G/1个月/非按月清零'},
      {id:'39',type:'3G/3个月/非按月清零'},
      {id:'41',type:'82G/12个月/非按月清零'},
      {id:'42',type:'46G/12个月/非按月清零'},
      {id:'45',type:'20G/12个月/非按月清零'},
      {id:'46',type:'6G/12个月/非按月清零'},
      {id:'48',type:'1G/1个月/非按月清零'},
      {id:'50',type:'12G/12个月/非按月清零'},
      {id:'51',type:'2G/2个月/非按月清零'},
      {id:'53',type:'30G/30个月/非按月清零'},
      {id:'59',type:'20G/24个月/非按月清零'},
      {id:'60',type:'72G/12个月/非按月清零'},
      {id:'61',type:'20G/12个月/非按月清零'},
      {id:'62',type:'72G/24个月/非按月清零'},
      {id:'63',type:'1G/1个月/非按月清零'},
      {id:'67',type:'6G/12个月/非按月清零'},
      {id:'73',type:'36G/12个月/非按月清零'},
      {id:'74',type:'49G/12个月/非按月清零'},
      {id:'75',type:'12G/12个月/非按月清零'},
      {id:'77',type:'62G/12个月/非按月清零'},
      {id:'78',type:'无限流量/50M空卡'},
      {id:'79',type:'无限流量套餐'},
      {id:'81',type:'无限流量套餐'},
      {id:'84',type:'无限流量/1个月'},
      {id:'85',type:'无限流量/3个月'},
      {id:'87',type:'无限流量/12个月'},
      {id:'90',type:'无限流量/6个月'},
      {id:'91',type:'无限流量/12个月'},
      {id:'97',type:'3G/6个月/非按月清零'},
      {id:'99',type:'2G/12个月/非按月清零'},
      {id:'100',type:'500M/12个月/按月清零'},
      {id:'105',type:'500M/12个月/按月清零'},
      {id:'106',type:'10M/1个月/按月清零'},
      {id:'110',type:'无限流量/1G空卡'},
     ]
     for(var i =0 ;i< cardInfo.length;i++){         
       if(data == cardInfo[i].id ){
         this.datatype = cardInfo[i].type;
         return
       }else{
       }
     }
    }


    animateIninitial: boolean = false;
    found = false;

    private CardInfo;
    private numCard;
    private items = [];
    private show_items = [];
    private is_select_event = false;
    private total_flow ;
    private flow;
    private timer;
    private used_flow;
    private iccid;
    private cardtype;
    private status;
    private cardInfo;
    private datatype ="";
  }

